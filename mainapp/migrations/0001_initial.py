# Generated by Django 4.2.3 on 2023-07-30 18:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=30, null=True, verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'ordering': ['city'],
            },
        ),
        migrations.CreateModel(
            name='City_district',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_district', models.CharField(blank=True, max_length=150, null=True, unique=True, verbose_name='Городской округ')),
            ],
            options={
                'verbose_name': 'Городской округ',
                'verbose_name_plural': 'Городские округа',
                'ordering': ['city_district'],
            },
        ),
        migrations.CreateModel(
            name='Illumination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('illumination', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='Осв')),
            ],
            options={
                'verbose_name': 'Освещение',
                'verbose_name_plural': 'Освещение',
                'ordering': ['illumination'],
            },
        ),
        migrations.CreateModel(
            name='Media_material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_material', models.CharField(blank=True, max_length=150, null=True, unique=True, verbose_name='Материал носителя')),
            ],
            options={
                'verbose_name': 'Материал носителя',
                'verbose_name_plural': 'Материалы носителя',
                'ordering': ['media_material'],
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Вн.код')),
                ('july_2023', models.CharField(max_length=250, verbose_name='Июль 2023')),
                ('august_2023', models.CharField(max_length=250, verbose_name='Агуст 2023')),
                ('september_2023', models.CharField(max_length=250, verbose_name='Сентябрь 2023')),
                ('october_2023', models.CharField(max_length=250, verbose_name='Октябрь 2023')),
                ('november_2023', models.CharField(max_length=250, verbose_name='Ноябрь 2023')),
                ('december_2023', models.CharField(max_length=250, verbose_name='Декабрь 2023')),
            ],
            options={
                'verbose_name': 'Продажа',
                'verbose_name_plural': 'Продажи',
                'ordering': ['internal_code'],
            },
        ),
        migrations.CreateModel(
            name='Side',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('side', models.CharField(blank=True, max_length=30, null=True, unique=True, verbose_name='Сторона')),
            ],
            options={
                'verbose_name': 'Сторона',
                'verbose_name_plural': 'Сторона',
                'ordering': ['side'],
            },
        ),
        migrations.CreateModel(
            name='Surface_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surface_type', models.CharField(blank=True, max_length=150, null=True, unique=True, verbose_name='Тип поверхности')),
            ],
            options={
                'verbose_name': 'Тип поверхности',
                'verbose_name_plural': 'Тип поверхностей',
                'ordering': ['surface_type'],
            },
        ),
        migrations.CreateModel(
            name='BillboardDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('internal_code', models.CharField(max_length=20, verbose_name='Вн.код')),
                ('address', models.CharField(max_length=250, verbose_name='Адрес')),
                ('latitude', models.DecimalField(decimal_places=10, max_digits=13, verbose_name='Широта')),
                ('longitude', models.DecimalField(decimal_places=10, max_digits=13, verbose_name='Долгота')),
                ('photo', models.URLField(verbose_name='фото/схема')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='Прайс с НДС')),
                ('digital_quantity', models.FloatField(blank=True, null=True, verbose_name='Диджтал кол-во показов')),
                ('grp', models.FloatField(blank=True, null=True, verbose_name='GRP')),
                ('ots', models.FloatField(blank=True, null=True, verbose_name='OTS')),
                ('code_espar', models.CharField(blank=True, max_length=50, null=True, verbose_name='Код Эспар')),
                ('product_restrictions', models.CharField(max_length=250, verbose_name='Ограничения по продукту')),
                ('Technical_requirements', models.URLField(verbose_name='Тех.требования')),
                ('price_montage', models.FloatField(blank=True, null=True, verbose_name='Монтаж. Прайс с НДС')),
                ('price_plywood', models.FloatField(blank=True, null=True, verbose_name='Переклейка. Прайс с НДС')),
                ('permission', models.DateField(null=True, verbose_name='Разрешение ПО')),
                ('note', models.TextField(verbose_name='Примечание')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='mainapp.city', verbose_name='Город')),
                ('city_district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='mainapp.city_district', verbose_name='Городской округ')),
                ('illumination', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='mainapp.illumination', verbose_name='Осв')),
                ('media_material', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='mainapp.media_material', verbose_name='Материал носителя')),
                ('sales', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='mainapp.sales', verbose_name='Продажи')),
                ('side', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='mainapp.side', verbose_name='Сторона')),
                ('surface_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='mainapp.surface_type', verbose_name='Тип поверхности')),
            ],
            options={
                'verbose_name': 'Билборд',
                'verbose_name_plural': 'Билборды',
                'ordering': ['internal_code'],
            },
        ),
    ]
